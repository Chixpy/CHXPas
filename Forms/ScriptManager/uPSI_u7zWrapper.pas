unit uPSI_u7zWrapper;

{ Initial version generated by UnitParser v0.7
}
interface

uses
  SysUtils, Classes, uPSComponent, uPSRuntime, uPSCompiler;

type

  TPSImport_u7zWrapper = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript;
      const ri: TPSRuntimeClassImporter); override;
  end;


{ compile-time registration functions }
procedure SIRegister_u7zWrapper(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_u7zWrapper_Routines(S: TPSExec);
procedure RIRegister_u7zWrapper(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
  FileUtil, LazFileUtils, Process, LazUTF8, sha1,
  uCHXStrUtils, u7zWrapper;

procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_u7zWrapper]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_u7zWrapper(CL: TPSPascalCompiler);
begin
  // Nop.
  // CL.AddConstantN('kw7zCacheFileExt', 'String').SetString('.txt');

  // Added as a constant...
  CL.AddConstantN('w7zFileExts', 'string').SetString(w7zFileExts);

  CL.AddClassN(CL.FindClass('TOBJECT'), 'w7zException');
  CL.AddDelphiFunction(
    'Procedure w7zListFiles(const aFilename: string; PackedFiles: TStrings; const OnlyPaths: boolean; const UseCache: boolean; const Password: string)');
  CL.AddDelphiFunction(
    'Function w7zExtractFile(const a7zArchive: string; const aFileMask: string; aFolder: string; const ShowProgress: boolean; const Password: string) : integer');
  CL.AddDelphiFunction(
    'Function w7zCompressFile(const a7zArchive: string; aFileList: TStrings; const ShowProgress: boolean; const CompType: string) : integer');
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure RIRegister_u7zWrapper_Routines(S: TPSExec);
begin
  S.RegisterDelphiFunction(@w7zListFiles, 'w7zListFiles', cdRegister);
  S.RegisterDelphiFunction(@w7zExtractFile, 'w7zExtractFile', cdRegister);
  S.RegisterDelphiFunction(@w7zCompressFile, 'w7zCompressFile', cdRegister);
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_u7zWrapper(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(w7zException) do ;
end;



{ TPSImport_u7zWrapper }
(*----------------------------------------------------------------------------*)
procedure TPSImport_u7zWrapper.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_u7zWrapper(CompExec.comp);
end;

(*----------------------------------------------------------------------------*)
procedure TPSImport_u7zWrapper.ExecImport1(CompExec: TPSScript;
  const ri: TPSRuntimeClassImporter);
begin
  RIRegister_u7zWrapper(ri);
  RIRegister_u7zWrapper_Routines(CompExec.Exec); // comment it if no routines
end;

(*----------------------------------------------------------------------------*)


end.
